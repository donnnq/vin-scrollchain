// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

contract ExploitSignalDAO {
    address public originator;

    struct ExploitSignal {
        string productName;
        string cveCode;
        bool isZeroDay;
        bool mitigationAvailable;
        bool isScrollchainSealed;
        uint256 timestamp;
    }

    ExploitSignal[] public exploitLedger;

    constructor() {
        originator = msg.sender;
    }

    function logExploitSignal(
        string memory productName,
        string memory cveCode,
        bool isZeroDay,
        bool mitigationAvailable,
        bool isScrollchainSealed
    ) external {
        exploitLedger.push(ExploitSignal({
            productName: productName,
            cveCode: cveCode,
            isZeroDay: isZeroDay,
            mitigationAvailable: mitigationAvailable,
            isScrollchainSealed: isScrollchainSealed,
            timestamp: block.timestamp
        }));
    }
}
